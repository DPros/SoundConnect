<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-3.2.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<http use-expressions="true">
		<!-- <intercept-url pattern="/" access="isAuthenticated()" /> -->
		<intercept-url pattern="/auth" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/index*" access="ROLE_USER" />
		<intercept-url pattern="/search*" access="ROLE_USER" />
		<intercept-url pattern="/home*" access="ROLE_USER" />
		<intercept-url pattern="/add-to-conference" access="ROLE_USER" />
		<intercept-url pattern="/add-to-user" access="ROLE_USER" />
		<intercept-url pattern="/admin/*" access="ROLE_ADMIN" />

		<access-denied-handler error-page="/error403.jsp" />

		<form-login login-page='/auth'
			login-processing-url="/j_spring_security_check" default-target-url="/auth"
			always-use-default-target="false" authentication-failure-url="/welcome?error"
			username-parameter="username" password-parameter="password" />

		<logout logout-url="/logout" logout-success-url="/"
			delete-cookies="JSESSIONID" invalidate-session="true" />

		<remember-me key="lmsBaratheons" token-validity-seconds="2000000" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER" />
				<user name="user1" password="1111" authorities="ROLE_USER" />
				<user name="user2" password="2222" disabled="true" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>

		<authentication-provider>
			<password-encoder hash="md5" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email, password, is_active as enabled from 
users where email=?"
				authorities-by-username-query="select email, namel from role inner join users on role.role_id=users.role_id where email=?" />
		</authentication-provider>

	</authentication-manager>

</beans:beans>
